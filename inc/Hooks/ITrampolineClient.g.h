// NOTE: This file was generated by a tool.
#pragma once

#include <base.h>

namespace ReSoel {
    namespace Hooks {
        class ITrampolineClient
        {
        public:
            virtual void AllocConsolePre() {}
            virtual void AllocConsolePost(BOOL) {}
            virtual void AttachConsolePre(DWORD) {}
            virtual void AttachConsolePost(BOOL, DWORD) {}
            virtual void CreateConsoleScreenBufferPre(DWORD, DWORD, const SECURITY_ATTRIBUTES*, DWORD, LPVOID) {}
            virtual void CreateConsoleScreenBufferPost(HANDLE, DWORD, DWORD, const SECURITY_ATTRIBUTES*, DWORD, LPVOID) {}
            virtual void FillConsoleOutputAttributePre(HANDLE, WORD, DWORD, COORD, LPDWORD) {}
            virtual void FillConsoleOutputAttributePost(BOOL, HANDLE, WORD, DWORD, COORD, LPDWORD) {}
            virtual void FillConsoleOutputCharacterWPre(HANDLE, WCHAR, DWORD, COORD, LPDWORD) {}
            virtual void FillConsoleOutputCharacterWPost(BOOL, HANDLE, WCHAR, DWORD, COORD, LPDWORD) {}
            virtual void FillConsoleOutputCharacterAPre(HANDLE, CHAR, DWORD, COORD, LPDWORD) {}
            virtual void FillConsoleOutputCharacterAPost(BOOL, HANDLE, CHAR, DWORD, COORD, LPDWORD) {}
            virtual void FlushConsoleInputBufferPre(HANDLE) {}
            virtual void FlushConsoleInputBufferPost(BOOL, HANDLE) {}
            virtual void FreeConsolePre() {}
            virtual void FreeConsolePost(BOOL) {}
            virtual void ScrollConsoleScreenBufferWPre(HANDLE, const SMALL_RECT*, const SMALL_RECT*, COORD, const CHAR_INFO*) {}
            virtual void ScrollConsoleScreenBufferWPost(BOOL, HANDLE, const SMALL_RECT*, const SMALL_RECT*, COORD, const CHAR_INFO*) {}
            virtual void ScrollConsoleScreenBufferAPre(HANDLE, const SMALL_RECT*, const SMALL_RECT*, COORD, const CHAR_INFO*) {}
            virtual void ScrollConsoleScreenBufferAPost(BOOL, HANDLE, const SMALL_RECT*, const SMALL_RECT*, COORD, const CHAR_INFO*) {}
            virtual void SetConsoleActiveScreenBufferPre(HANDLE) {}
            virtual void SetConsoleActiveScreenBufferPost(BOOL, HANDLE) {}
            virtual void SetConsoleCPPre(UINT) {}
            virtual void SetConsoleCPPost(BOOL, UINT) {}
            virtual void SetConsoleCtrlHandlerPre(PHANDLER_ROUTINE, BOOL) {}
            virtual void SetConsoleCtrlHandlerPost(BOOL, PHANDLER_ROUTINE, BOOL) {}
            virtual void SetConsoleCursorInfoPre(HANDLE, const CONSOLE_CURSOR_INFO*) {}
            virtual void SetConsoleCursorInfoPost(BOOL, HANDLE, const CONSOLE_CURSOR_INFO*) {}
            virtual void SetConsoleCursorPositionPre(HANDLE, COORD) {}
            virtual void SetConsoleCursorPositionPost(BOOL, HANDLE, COORD) {}
            virtual void SetConsoleDisplayModePre(HANDLE, DWORD, PCOORD) {}
            virtual void SetConsoleDisplayModePost(BOOL, HANDLE, DWORD, PCOORD) {}
            virtual void SetConsoleModePre(HANDLE, DWORD) {}
            virtual void SetConsoleModePost(BOOL, HANDLE, DWORD) {}
            virtual void SetConsoleOutputCPPre(UINT) {}
            virtual void SetConsoleOutputCPPost(BOOL, UINT) {}
            virtual void SetConsoleScreenBufferInfoExPre(HANDLE, PCONSOLE_SCREEN_BUFFER_INFOEX) {}
            virtual void SetConsoleScreenBufferInfoExPost(BOOL, HANDLE, PCONSOLE_SCREEN_BUFFER_INFOEX) {}
            virtual void SetConsoleScreenBufferSizePre(HANDLE, COORD) {}
            virtual void SetConsoleScreenBufferSizePost(BOOL, HANDLE, COORD) {}
            virtual void SetConsoleTextAttributePre(HANDLE, WORD) {}
            virtual void SetConsoleTextAttributePost(BOOL, HANDLE, WORD) {}
            virtual void SetConsoleTitleWPre(WCHAR*) {}
            virtual void SetConsoleTitleWPost(BOOL, WCHAR*) {}
            virtual void SetConsoleTitleAPre(CHAR*) {}
            virtual void SetConsoleTitleAPost(BOOL, CHAR*) {}
            virtual void SetConsoleWindowInfoPre(HANDLE, BOOL, const SMALL_RECT*) {}
            virtual void SetConsoleWindowInfoPost(BOOL, HANDLE, BOOL, const SMALL_RECT*) {}
            virtual void SetCurrentConsoleFontExPre(HANDLE, BOOL, PCONSOLE_FONT_INFOEX) {}
            virtual void SetCurrentConsoleFontExPost(BOOL, HANDLE, BOOL, PCONSOLE_FONT_INFOEX) {}
            virtual void SetStdHandlePre(DWORD, HANDLE) {}
            virtual void SetStdHandlePost(BOOL, DWORD, HANDLE) {}
            virtual void WriteConsoleWPre(HANDLE, const VOID*, DWORD, LPDWORD, LPVOID) {}
            virtual void WriteConsoleWPost(BOOL, HANDLE, const VOID*, DWORD, LPDWORD, LPVOID) {}
            virtual void WriteConsoleAPre(HANDLE, const VOID*, DWORD, LPDWORD, LPVOID) {}
            virtual void WriteConsoleAPost(BOOL, HANDLE, const VOID*, DWORD, LPDWORD, LPVOID) {}
            virtual void WriteConsoleOutputWPre(HANDLE, const CHAR_INFO*, COORD, COORD, PSMALL_RECT) {}
            virtual void WriteConsoleOutputWPost(BOOL, HANDLE, const CHAR_INFO*, COORD, COORD, PSMALL_RECT) {}
            virtual void WriteConsoleOutputAPre(HANDLE, const CHAR_INFO*, COORD, COORD, PSMALL_RECT) {}
            virtual void WriteConsoleOutputAPost(BOOL, HANDLE, const CHAR_INFO*, COORD, COORD, PSMALL_RECT) {}
            virtual void WriteConsoleOutputAttributePre(HANDLE, const WORD*, DWORD, COORD, LPDWORD) {}
            virtual void WriteConsoleOutputAttributePost(BOOL, HANDLE, const WORD*, DWORD, COORD, LPDWORD) {}
            virtual void WriteConsoleOutputCharacterWPre(HANDLE, WCHAR*, DWORD, COORD, LPDWORD) {}
            virtual void WriteConsoleOutputCharacterWPost(BOOL, HANDLE, WCHAR*, DWORD, COORD, LPDWORD) {}
            virtual void WriteConsoleOutputCharacterAPre(HANDLE, CHAR*, DWORD, COORD, LPDWORD) {}
            virtual void WriteConsoleOutputCharacterAPost(BOOL, HANDLE, CHAR*, DWORD, COORD, LPDWORD) {}
            virtual void WriteFilePre(HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED) {}
            virtual void WriteFilePost(BOOL, HANDLE, LPCVOID, DWORD, LPDWORD, LPOVERLAPPED) {}
        };
    }
}
